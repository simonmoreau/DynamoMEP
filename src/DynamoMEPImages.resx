<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DynamoMEP.Group.FromElement.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5Zb/AxmKJptweqn1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="DynamoMEP.Group.FromElement.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADxklEQVRYR8WXW09UZxSG/Qn+
        BH8Ct73ycKNJE6ONxgQTJdHERtuIUSDRimg9JbWhNtEavCCxvdAYRLEM5VAZyyDamnJQGIY57DnPMDAM
        dEDBQ17XuxgN2j2HzzFxJe8MmWzW+3zrW9/ae6+SWC1aZ6NPHXYe9NY/MqLeD/Sp48P89KS3fuQ1/GLt
        pjWiRtGgCCtkiZpFmuQjgp6FASR5A82qa+rR/NtNuB4N4d8Rj+p6SzuOnjiHDZu2EqZVpOU0iPwATCYa
        3Fa5B129Axh86sXImA9P3AE8HV/WE7cfw6M+9D8aRnVtPSEyoopcilKiIEDrdjHvlxXTeNRjYdwbwoQ/
        jIlARL4j8PjCGJsIKtSQAB5ahuC2lFoJewBJUPXl1kot98iYX01o6g/FEIwkEIok5TsJKxyHz4oqCCtC
        iH3f1hCiOZeqWOQFsC41XdPy0twr5lY4gUg8hXhyGonJNOKT04glphCKJuEPxhSClehxPiQAtSaXrlD8
        H0D+sYKrZ5NxVR4pOc2jYp5MzWA6PYt0Zg7pmTmkpjMKRAifFYNbYAmd64dq5isStgANTMBycvUscTg2
        iUQqraZz/80jO/9MtIDMbFYhWAlux3IV/Lh89VcCvKtogbAH+P78T7oStzQd952rp9HsXBYLzxax9OIl
        FpdewPXgbzj7BtB9rw8dXU60OXrQ0taJH39uIgBnxro8ers9hQHY9YFQHFFZIQG4+ueLS3j16jVOnb2A
        r3bsxoGDtUbauHkH4RroJWEPcOpdBYLaYGy+yakZLfn8wnOcPPMDdu3Zj2x2Hibxz7Abh4+eLgqwheef
        g4dn3xuIapOx64PhGHZWff1R5o/FvMXRWxIAJ2Cm2zmgDTUujRWQPmAjVu7eh7pjJ43NfVYEtxxO1eFj
        RQAYckEjBwpPAqvAo0gI+V23w1TcytaO+6ojJQJoFS5dvYah0WUIVoIAHEqmcvuCuP3HfdWR784UB2DI
        RRWEuHCxSSvB7SAA54Kpxn0h3O78S1VTKgAjB2Ht2vsNbtxqVwCeClMR4E5nn8oIgCEXczv4TMC7nM4F
        U3n8IbR19alqj581A1gZBODINRWb+G63S1U2AG/HpiLA7z0uVdkAHEqmmgiE0d7Tr6qrP1ceAAeSqQjg
        +POBqmwAu0FTTF6ZhI57AiCqrjtRHkA0kTIWATrkwfZ84y80X/ngag4QS04Zi/eCK83XaU6pYS7MAXhX
        NJVr4DHWb9xC86pcqrdhDrB3/yFj8fZtY84wBrB7vCpF+V5W3gP4rC+nn/H1fNXqN1/S3CWYGB0eAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>